#!/bin/bash
# Time-stamp: "2024-12-15 20:56:35 (ywatanabe)"
# File: ./Ninja/.apptainer/ninja/ninja.sandbox/opt/Ninja/src/apptainer_builders/ENVS.sh.src

# Project
export APPNAME=${APPNAME:-Ninja}

# Host user
export HOST_USER=${HOST_USER:-$USER}
export HOST_UID=${HOST_UID:-1000}
export HOST_GROUP=${HOST_GROUP:-$USER}
export HOST_HOME=${HOST_HOME:-/home/$USER}
export HOST_DOT_EMACS=${HOST_DOT_EMACS:-$HOST_HOME/.emacs.d}

# Ninja user
export NINJA_BASE_USER=${NINJA_BASE_USER:-ninja}
export NINJA_BASE_UID=${NINJA_BASE_UID:-9999}
export NINJA_BASE_HOME=${NINJA_BASE_HOME:-/home/$NINJA_BASE_USER}
# export NINJA_BASE_DOT_EMACS=${NINJA_BASE_DOT_EMACS:-$NINJA_BASE_HOME/.emacs.d}

# Ninja shared group
export NINJAS_GROUP=${NINJAS_GROUP:-ninja}
export NINJA_N_AGENTS=${NINJA_N_AGENTS:-4}

# Ninja project
export NINJA_BASE_OPT_DIR=${NINJA_BASE_OPT_DIR:-/opt}

# Ninja workspaces
export NINJA_SHARED_WORKSPACE=${NINJA_SHARED_WORKSPACE:-/workspace/shared}
export NINJA_SHARED_SRC=${NINJA_SHARED_SRC:-$NINJA_SHARED_WORKSPACE/src}
export NINJA_SHARED_LOGS=${NINJA_SHARED_LOGS:-$NINJA_SHARED_WORKSPACE/logs}
export NINJA_SHARED_CONFIG=${NINJA_SHARED_CONFIG:-$NINJA_SHARED_WORKSPACE/config}
export NINJA_SHARED_REQUESTS=${NINJA_SHARED_REQUESTS:-$NINJA_SHARED_WORKSPACE/requests}
export NINJA_SHARED_BACKUPS=${NINJA_SHARED_BACKUPS:-$NINJA_SHARED_WORKSPACE/backups}

# Emacs Configuration
export NINJA_EMACS_BIN=${NINJA_EMACS_BIN:-/usr/bin/emacs}
export NINJA_EMACS_CLIENT=${NINJA_EMACS_CLIENT:-/usr/bin/emacsclient}
# export NINJA_EMACSD=${NINJA_EMACSD:-$NINJA_HOME/.emacs.d}
export NINJA_EMACS_SERVER_SOCKET_DIR=${NINJA_EMACS_SERVER_SOCKET_DIR:-"/tmp/ninja-shared/"}
export NINJA_EMACS_SERVER_SOCKET=${NINJA_EMACS_SERVER_SOCKET:-$NINJA_EMACS_SERVER_SOCKET_DIR/server}
export NINJA_EMACS_SERVER_CHECK_INTERVAL=${NINJA_EMACS_SERVER_CHECK_INTERVAL:-1}

# Feedback Loop
export NINJA_MAX_RETRIES=${NINJA_MAX_RETRIES:-5}
export NINJA_API_TIMEOUT=${NINJA_API_TIMEOUT:-30}

# LLM Configuration
export ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-""}
export ANTHROPIC_ENGINE=${ANTHROPIC_ENGINE:-""}

# Python Configuration
export PYTHON_BASE_VIRTUAL_ENV=${PYTHON_BASE_VIRTUAL_ENV:-$NINJA_BASE_WORKSPACE/.env}


################################################################################
# System
################################################################################
if [ -n "$APPTAINER_CONTAINER" ]; then
    export PS1="(A) \u $ "
fi

# Debian
export DEBIAN_FRONTEND=noninteractive

# PATH
export PATH="/sbin:$PATH"

update_ninja_envs() {
    local ninja_id="$1"

    # Main
    NINJA_ID=$ninja_id
    NINJA_USER="${NINJA_BASE_USER}-$(printf "%03d" $ninja_id)"
    NINJA_UID=$((NINJA_BASE_UID + ninja_id))
    NINJA_GROUP=$NINJA_USER
    NINJA_HOME="/home/${NINJA_USER}"

    # Ninja workspaces
    NINJA_WORKSPACE="/workspace/$NINJA_USER"
    NINJA_SRC="$NINJA_WORKSPACE/src"
    NINJA_LOGS="$NINJA_WORKSPACE/logs"
    NINJA_CONFIG="$NINJA_WORKSPACE/config"
    NINJA_REQUESTS="$NINJA_WORKSPACE/requests"
    NINJA_BACKUPS="$NINJA_WORKSPACE/backups"

    # # Emacs Configuration
    export NINJA_EMACSD=${NINJA_EMACSD:-$NINJA_HOME/.emacs.d}

    # Python Configuration
    NINJA_PYTHON_VIRTUAL_ENV="$NINJA_WORKSPACE/.env"

    # Export all variables
    export NINJA_ID \
           NINJA_USER \
           NINJA_UID \
           NINJA_GROUP \
           NINJA_HOME \
           NINJA_HOME_EMACSD \
           NINJA_OPT_DIR \
           NINJA_WORKSPACES \
           NINJA_WORKSPACE \
           NINJA_SRC \
           NINJA_LOGS \
           NINJA_CONFIG \
           NINJA_REQUESTS \
           NINJA_BACKUPS \
           NINJA_EMACSD \
           NINJA_EMACS_SERVER_SOCKET_DIR \
           NINJA_EMACS_SERVER_SOCKET \
           PYTHON_VIRTUAL_ENV
}

# Check if NINJA_ID is set
if [ ! -z "${NINJA_ID+x}" ]; then
    update_ninja_envs $NINJA_ID
    HOME=$NINJA_HOME
    # cd $NINJA_HOME
fi

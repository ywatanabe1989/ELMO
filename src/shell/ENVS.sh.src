#!/bin/bash
# Time-stamp: "2024-12-22 15:43:51 (ywatanabe)"

# Base Configuration
export NINJA_ROOT=${NINJA_ROOT:-/opt/Ninja}

# Host Configuration
export NINJA_HOST_USER=${NINJA_HOST_USER:-$USER}
export NINJA_HOST_HOME=${NINJA_HOST_HOME:-/home/$USER}
export NINJA_HOST_WORKSPACE=${NINJA_HOST_WORKSPACE:-$NINJA_HOST_HOME/Ninja/workspace}

# Workspace Configuration
export NINJA_WORKSPACE_ROOT=${NINJA_WORKSPACE_ROOT:-/workspace}

# Ninja User Configuration
export NINJA_BASE_UID=${NINJA_BASE_UID:-9999}
export NINJA_N_AGENTS=${NINJA_N_AGENTS:-2}

# External Services
export NINJA_LLM_API_KEY=${NINJA_LLM_API_KEY:-""}
export NINJA_LLM_ENGINE=${NINJA_LLM_ENGINE:-""}

# System Configuration
if [ -n "$APPTAINER_CONTAINER" ]; then
    export PS1="(A) \u $ "
fi
export DEBIAN_FRONTEND=noninteractive
export PATH="/sbin:$PATH"

update_ninja_envs() {
    local ninja_id="$1"
    export NINJA_ID=$ninja_id
    export NINJA_USER="ninja-$(printf "%03d" $ninja_id)"
    export NINJA_UID=$((NINJA_BASE_UID + ninja_id))
    export NINJA_USER_HOME="/home/${NINJA_USER}"
}

if [ ! -z "${NINJA_ID+x}" ]; then
    update_ninja_envs $NINJA_ID
    HOME=$NINJA_USER_HOME
    cd $NINJA_USER_HOME
fi

# #!/bin/bash
# # Time-stamp: "2024-12-22 13:19:02 (ywatanabe)"
# # File: ./Ninja/.apptainer/ninja/ninja.sandbox/opt/Ninja/src/apptainer_builders/ENVS.sh.src

# # Base Configuration
# export APPNAME=${APPNAME:-Ninja}
# export NINJA_ROOT=${NINJA_ROOT:-/opt/Ninja}

# # Host user
# export NINJA_HOST_USER=${NINJA_HOST_USER:-$USER}
# export NINJA_HOST_UID=${NINJA_HOST_UID:-1000}
# export NINJA_HOST_GROUP=${NINJA_HOST_GROUP:-$USER}
# export NINJA_HOST_HOME=${NINJA_HOST_HOME:-/home/$USER}
# export NINJA_HOST_EMACSD=${NINJA_HOST_EMACSD:-$NINJA_HOST_HOME/.emacs.d}
# export NINJA_HOST_NINJA_DIR=${NINJA_HOST_NINJA_DIR:-$NINJA_HOST_HOME/Ninja}
# export NINJA_HOST_WORKSPACE=${NINJA_HOST_WORKSPACE:-$NINJA_HOST_NINJA_DIR/workspace}

# # Workspace Configuration
# export NINJA_WORKSPACE_ROOT=${NINJA_WORKSPACE_ROOT:-/workspace}
# export NINJA_WORKSPACE_PROJECTS=${NINJA_WORKSPACE_ROOT}/projects
# export NINJA_WORKSPACE_RESOURCES=${NINJA_WORKSPACE_ROOT}/resources
# export NINJA_WORKSPACE_RESOURCES_SHARED=${NINJA_WORKSPACE_RESOURCES}/shared
# export NINJA_WORKSPACE_RESOURCES_PRIVATE=${NINJA_WORKSPACE_RESOURCES}/private
# export NINJA_WORKSPACE_RESOURCES_FROM_HOST=${NINJA_WORKSPACE_RESOURCES_PRIVATE}/from_host

# # Ninja User Configuration
# export NINJA_BASE_UID=${NINJA_BASE_UID:-9999}
# export NINJA_GROUP=${NINJA_GROUP:-ninja}
# export NINJA_N_AGENTS=${NINJA_N_AGENTS:-2}


# # Application Configuration
# export NINJA_EMACS_BIN=${NINJA_EMACS_BIN:-emacs}
# export NINJA_EMACS_CLIENT=${NINJA_EMACS_CLIENT:-emacsclient}
# export NINJA_EMACSD_SHARED=/opt/Ninja/src/apptainer_builders/shared_emacsd
# export NINJA_EMACSD_SHARED_RESOURCES="elpa init.el inits lisp custom.el"
# export NINJA_EMACSD_PRIVATE_RESOURCES="recentf history abbrev_defs places transient auto-save-list"

# # External Services
# export NINJA_LLM_API_KEY=${NINJA_LLM_API_KEY:-""}
# export NINJA_LLM_ENGINE=${NINJA_LLM_ENGINE:-""}

# # Python Configuration
# # export PYTHON_BASE_VIRTUAL_ENV=${PYTHON_BASE_VIRTUAL_ENV:-$NINJA_BASE_WORKSPACE/.env}


# ################################################################################
# # System
# ################################################################################
# if [ -n "$APPTAINER_CONTAINER" ]; then
#     export PS1="(A) \u $ "
# fi

# # Debian
# export DEBIAN_FRONTEND=noninteractive

# # PATH
# export PATH="/sbin:$PATH"

# update_ninja_envs() {
#     local ninja_id="$1"

#     # Main
#     export NINJA_ID=$ninja_id
#     export NINJA_USER="ninja-$(printf "%03d" $ninja_id)"
#     export NINJA_UID=$((NINJA_BASE_UID + ninja_id))
#     export NINJA_USER_HOME="/home/${NINJA_USER}"

#     # # Emacs Configuration
#     # export NINJA_USER_EMACSD="${NINJA_USER_HOME}/.emacs.d"
#     # export NINJA_USER_EMACSD_SERVER_DIR="${NINJA_USER_EMACSD}/emacs-server"
#     # export NINJA_USER_EMACSD_SERVER_FILE="${NINJA_USER_EMACSD_SERVER_DIR}/server"
# }

# # Check if NINJA_ID is set
# if [ ! -z "${NINJA_ID+x}" ]; then
#     update_ninja_envs $NINJA_ID
#     HOME=$NINJA_USER_HOME
#     cd $NINJA_USER_HOME
# fi

# # update_ninja_envs() {
# #     local ninja_id="$1"

# #     # Main
# #     NINJA_ID=$ninja_id
# #     NINJA_USER="${NINJA_BASE_USER}-$(printf "%03d" $ninja_id)"
# #     NINJA_UID=$((NINJA_BASE_UID + ninja_id))
# #     NINJA_GROUP=$NINJA_USER
# #     NINJA_HOME="/home/${NINJA_USER}"

# #     # Ninja workspaces
# #     NINJA_WORKSPACE="/workspace/$NINJA_USER"

# #     # Emacs Configuration
# #     NINJA_EMACSD_PRIVATE="$NINJA_HOME/.emacs.d"
# #     NINJA_EMACSD_SERVER_DIR="$NINJA_EMACSD_PRIVATE/emacs-server"
# #     NINJA_EMACSD_SERVER_FILE="$NINJA_EMACSD_SERVER_DIR/server"

# #     # Export all variables
# #     export NINJA_ID \
    #     #            NINJA_USER \
    #     #            NINJA_UID \
    #     #            NINJA_GROUP \
    #     #            NINJA_HOME \
    #     #            NINJA_WORKSPACE \
    #     #            NINJA_EMACSD_PRIVATE \
    #     #            NINJA_EMACSD_SERVER_DIR \
    #     #            NINJA_EMACSD_SERVER_FILE
# # }

# # Check if NINJA_ID is set
# if [ ! -z "${NINJA_ID+x}" ]; then
#     update_ninja_envs $NINJA_ID
#     HOME=$NINJA_HOME
#     cd $NINJA_HOME
# fi

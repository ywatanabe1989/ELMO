#!/bin/bash
# Time-stamp: "2024-12-16 06:55:27 (ywatanabe)"
# File: ./Ninja/src/apptainer_builders/.start_emacs.sh-versions/start_emacs.sh_v002

#!/bin/bash
# Time-stamp: "2024-12-16 06:55:27 (ywatanabe)"
# File: ./Ninja/src/apptainer_builders/.start_emacs.sh-versions/start_emacs.sh_v002

#!/bin/bash
# Time-stamp: "2024-12-16 06:55:27 (ywatanabe)"
# File: ./Ninja/src/apptainer_builders/.start_emacs.sh-versions/start_emacs.sh_v002
# File: ./Ninja/src/apptainer_builders/start_emacs.sh

# Check if running as root
if [ "$(id -u)" != "0" ]; then
    echo "This script ($0) must be run as root" >&2
    exit 1
fi

source "$(dirname $0)"/ENVS.sh.src


correct_socket_dir_permissions() {
    if [ -d "$NINJA_EMACS_SERVER_SOCKET_DIR" ]; then
        rm -rf "$NINJA_EMACS_SERVER_SOCKET_DIR"
    fi
    mkdir -p "$NINJA_EMACS_SERVER_SOCKET_DIR"
    chown root:"$NINJAS_GROUP" "$NINJA_EMACS_SERVER_SOCKET_DIR"
    chmod 770 "$NINJA_EMACS_SERVER_SOCKET_DIR"
    if [ $? -ne 0 ]; then
        echo "Error setting permissions for $NINJA_EMACS_SERVER_SOCKET_DIR" >&2
        exit 1
    fi

    echo "Socket directory: $NINJA_EMACS_SERVER_SOCKET_DIR"
    ls "$NINJA_EMACS_SERVER_SOCKET_DIR" -al
}


correct_socket_permissions() {
    local socket_dir
    socket_dir=$(dirname "$NINJA_EMACS_SERVER_SOCKET")
    if [ -d "$socket_dir" ]; then
        chown -R root:"$NINJAS_GROUP" "$socket_dir"
        chmod -R 770 "$socket_dir"
        if [ $? -ne 0 ]; then
            echo "Error setting permissions for $socket_dir" >&2
            exit 1
        fi
    fi
}

debugging_echo() {
    # User
    echo "User: $NINJA_USER"

    # Socket directory
    echo "Socket Directory: $NINJA_EMACS_SERVER_SOCKET_DIR"
    ls "$NINJA_EMACS_SERVER_SOCKET_DIR" -al

    # Socket
    echo "Socket: $NINJA_EMACS_SERVER_SOCKET"
    if [ -S "$NINJA_EMACS_SERVER_SOCKET" ]; then
        ls "$NINJA_EMACS_SERVER_SOCKET" -al
    fi
}

display_check() {
    # Display
    echo "Display: $DISPLAY"
    if [ -z "$DISPLAY" ]; then
        echo "DISPLAY variable is not set. Cannot start GUI emacs."
        return 1
    fi
}

get_connected_clients() {
    local count
    count=$("$NINJA_EMACS_CLIENT" -s "$NINJA_EMACS_SERVER_SOCKET" --eval '(length server-clients)' 2>/dev/null)

    echo ""
    echo "========================================"
    echo "Number of connected clients: $count"
    echo "========================================"
    echo ""
}

create_init_file() {
    local init_file="/tmp/ninja-emacs-init.el"
    cat > "$init_file" <<EOF
(require 'server)
(setq server-name "$NINJA_EMACS_SERVER_SOCKET")
(server-start)
EOF
    echo "$init_file"
}

start_emacs() {
    correct_socket_dir_permissions
    display_check

    local ninja_ids
    ninja_ids=()

    for ninja_id in $(seq 1 $NINJA_N_AGENTS); do
        ninja_ids+=("$ninja_id")
    done

    local init_file
    init_file=$(create_init_file)

    for ninja_id in "${ninja_ids[@]}"; do
        update_ninja_envs "$ninja_id"
        export HOME="$NINJA_HOME"
        cd "$HOME"

        debugging_echo

        if [ ! -S "$NINJA_EMACS_SERVER_SOCKET" ]; then
            # Start the emacs server
            echo "Starting emacs server for $NINJA_USER"
            su -l "$NINJA_USER" -c "$NINJA_EMACS_BIN --daemon -Q -l $init_file 2>&1" &

            # Wait for the socket with timeout
            local timeout=10
            local elapsed=0
            while [ ! -S "$NINJA_EMACS_SERVER_SOCKET" ] && [ $elapsed -lt $timeout ]; do
                sleep 1
                elapsed=$((elapsed + 1))
                echo "Waiting for socket... ${elapsed}s"
            done

            if [ ! -S "$NINJA_EMACS_SERVER_SOCKET" ]; then
                echo "Error: Timeout waiting for emacs server socket"
                exit 1
            fi
        fi

        correct_socket_permissions

        # # Working but with GUI windows from all Ninjas
        # # Connect Ninjas to the Emacs server
        # echo "Connecting emacs client for $NINJA_USER"
        # su -l "$NINJA_USER" -c "DISPLAY=:0 $NINJA_EMACS_CLIENT -s '$NINJA_EMACS_SERVER_SOCKET' -c '(message \"Client connected\")'" &

        # # Opens window but I cannot run any commands other than C-g; which disconnect users
        echo "Connecting emacs client for $NINJA_USER"
        su -l "$NINJA_USER" -c "$NINJA_EMACS_CLIENT -nw --no-window-system -s '$NINJA_EMACS_SERVER_SOCKET' --eval '(progn (message \"Client connected\") (while t (sleep-for 1)))' </dev/null >/dev/null 2>&1" &

        sleep 1
    done

    get_connected_clients

    # GUI connection for root at the end with retry
    local max_retries=10
    local retry_count=0
    while ! DISPLAY=:0 "$NINJA_EMACS_CLIENT" -s "$NINJA_EMACS_SERVER_SOCKET" -c -n 2>/dev/null && [ "$retry_count" -lt "$max_retries" ]; do
        echo "Waiting for emacs server to accept connections... (attempt $retry_count/$max_retries)"
        sleep 1
        retry_count=$((retry_count + 1))
    done


    if [ "$retry_count" -eq "$max_retries" ]; then
        echo "Error: Could not connect to emacs server after $max_retries retries"
    fi

    sleep 100
    # --eval '(dolist (client server-clients) (with-selected-frame (car (client-frames client)) (message "Hello from server to %s" (client-name client))))'

}

start_emacs


# EOF
